external_components:
  #- source:
  #    type: git
  #    url: https://github.com/gnumpi/esphome_matrixio
  #    ref: main
  - source:
      type: local
      path: esphome/components/

esphome:
  name: matrixio-voice

esp32:
  board: esp32dev
  framework:
    type: esp-idf
    version: recommended

wifi:
  ssid: SSID
  password: PASSWORD
  fast_connect: true

logger:

ota:

api:

spi:
  clk_pin:  GPIO32
  mosi_pin: GPIO33
  miso_pin: GPIO21

matrixio:
  id: matrixio_dev
  cs_pin: GPIO23

light:
  - platform: matrixio
    name: everloop
    id: everloop

microphone:
  - platform: matrixio
    id: matrixio_mic

speaker:
  - platform: matrixio
    id: matrixio_speaker_hp
    # [headphone,speakers], default: headphone
    audio_out: headphone
    # 0..100, in percent, default: 80
    volume: 90

voice_assistant:
  id: va
  microphone: matrixio_mic
  speaker: matrixio_speaker_hp

  on_listening:
    - light.turn_on:
        id: everloop
        blue: 100%
        red: 0%
        green: 0%
        white: 0%
        brightness: 60%
  on_stt_vad_end:
    - light.turn_on:
        id: everloop
        blue: 50%
        red: 0%
        green: 100%
        white: 0%
        brightness: 60%
  on_tts_start:
    - light.turn_on:
        id: everloop
        blue: 100%
        red: 100%
        green: 0%
        white: 0%
        brightness: 60%
  on_end:
    - delay: 100ms
    - wait_until:
        not:
          speaker.is_playing:
    - script.execute: reset_led
  on_error:
    - light.turn_on:
        id: everloop
        red: 100%
        green: 0%
        blue: 0%
        white: 0%
        brightness: 60%
    - delay: 1s
    - script.execute: reset_led
  on_client_connected:
    - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - voice_assistant.start_continuous:
          - script.execute: reset_led
  on_client_disconnected:
    - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - voice_assistant.stop:
          - light.turn_off: everloop

script:
  - id: reset_led
    then:
      - if:
          condition:
            - switch.is_on: use_wake_word
            - switch.is_on: use_listen_light
          then:
            - light.turn_on:
                id: everloop
                red: 100%
                green: 89%
                blue: 71%
                white: 0%
                brightness: 60%
          else:
            - light.turn_off: everloop

switch:
  - platform: template
    name: 'Use wake word'
    id: use_wake_word
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config
    on_turn_on:
      - lambda: id(va).set_use_wake_word(true);
      - if:
          condition:
            not:
              - voice_assistant.is_running
          then:
            - voice_assistant.start_continuous
      - script.execute: reset_led
    on_turn_off:
      - voice_assistant.stop
      - lambda: id(va).set_use_wake_word(false);
      - script.execute: reset_led
  - platform: template
    name: 'Use Listen Light'
    id: use_listen_light
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config
    on_turn_on:
      - script.execute: reset_led
    on_turn_off:
      - script.execute: reset_led

  - platform: template
    name: "Start Listening"
    turn_on_action:
      - voice_assistant.start:
          silence_detection: false

    turn_off_action:
      - voice_assistant.stop:
      - script.execute: reset_led
